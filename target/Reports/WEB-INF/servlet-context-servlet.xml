<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<context:component-scan base-package="com.cm" />
	
		<!-- Getting Database properties -->
	<context:property-placeholder location="classpath:application.properties" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*"/>
			<bean class="com.cm.util.AuthInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${database.driverClass}" />
		<property name="jdbcUrl" value="${database.url}" />
		<property name="user" value="${database.username}" />
		<property name="password" value="${database.password}" />
		
		<property name="acquireIncrement" value="${connection.acquireIncrement}" />
		<property name="minPoolSize" value="${connection.minPoolSize}" />
		<property name="maxPoolSize" value="${connection.maxPoolSize}" />
		<property name="maxIdleTime" value="${connection.maxIdleTime}" />
	</bean> 
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
		<props>
		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
		<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
		<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
		</props>
		</property>
		<property name="packagesToScan" value="com.cm"></property>
	</bean>
	
	<!--  multipart resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="10000000" />
        <property name="uploadTempDir" ref="uploadDirResource" />
    </bean>
    
    <bean id="userValidator" class="com.cm.util.UserFormValidator" />
    <bean id="positionValidator" class="com.cm.util.PositionFormValidator" />
    <bean id="teamValidator" class="com.cm.util.TeamFormValidator" />
    <bean id="scheduleValidator" class="com.cm.util.ScheduleFormValidator" />
    <bean id="scheduleActivityValidator" class="com.cm.util.ScheduleActivityFormValidator" />
    <bean id="locationValidator" class="com.cm.util.LocationFormValidator" />
    <bean id="locationItemValidator" class="com.cm.util.LocationItemValidator" />
    <bean id="reportValidator" class="com.cm.util.ReportFormValidator" />
    
    <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:message" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
    
    <bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg>
			<value>/home/void/workspace/Content Management/upload</value>
		</constructor-arg>
	</bean>
    <tx:annotation-driven />
	
	<!-- Converter -->
	
	<mvc:annotation-driven conversion-service="conversionService"/>
	 <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	    <property name="converters">
	        <list>
	            <bean id="teamMember" class="com.cm.util.TeamMemberConverter" />
	        </list>
	    </property>
	</bean>
	
	<!-- Transaction -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>